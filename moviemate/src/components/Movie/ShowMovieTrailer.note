import React, { useState, useEffect } from 'react';
import firebase from 'firebase/app';
import { Firestore, collection } from 'firebase/firestore';
import YouTube from 'react-youtube';
import { Movie, getMovie } from '../../utils/movieUtils/fetchAndFillDb';
import ShowMovie from './ShowMovie';


const ShowMovieTrailer: React.FC = () => {
  const [movie, setMovie] = useState<Movie[]>([]);
  const [trailerId, setTrailerId] = useState<string>('');

  ShowMovie

  
    const fetchTrailer = async () => {
      try {
        const movieData: Movie = await getMovie(number,toString());
        setMovie(movieData);
        const authUser = auth.currentUser;
        if (authUser && movieData.id) {
          is
        }
          moviesCollection.docs.map((doc: { id: trailerUrl; data: () => any; }) => ({
          id: doc.id,
          ...doc.data()
        }));
        setMovies(moviesData);
      } catch (error) {
        console.error('Error fetching movies:', error);
      }
    };
    fetchTrailer();
  }, []);

  return (
    <div>
      {movies.map(movie => (
        <div key={movie.id}>
          <h2>{movie.title}</h2>
          <p>Director: {movie.director}</p>
          <img src={movie.posterUrl} alt={movie.title} style={{ width: '200px' }} />
          <div>
            <YouTube videoId={getVideoId(movie.trailerUrl)} opts={{ width: '560', height: '315' }} />
          </div>
        </div>
      ))}
    </div>
  );
;

const getVideoId = (url: string): string => {
  // Extract video ID from YouTube URL
  const regex = /(?:https?:\/\/)?(?:www\.)?(?:youtube\.com\/(?:[^\/\n\s]+\/\S+\/|(?:v|e(?:mbed)?)\/|\S*?[?&]v=)|youtu\.be\/)([a-zA-Z0-9_-]{11})/;
  const match = url.match(regex);
  if (match && match[1]) {
    return match[1];
  } else {
    console.error('Invalid YouTube URL:', url);
    return '';
  }
};

export default ShowMovieTrailer;